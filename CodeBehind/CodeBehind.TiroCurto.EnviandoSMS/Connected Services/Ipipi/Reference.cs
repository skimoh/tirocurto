//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ipipi
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://upsidewireless.com/webservice/sms", ConfigurationName="Ipipi.SMSSoap")]
    public interface SMSSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_Test", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_TestResponse> Send_TestAsync(Ipipi.Send_TestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_Plain", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_PlainResponse> Send_PlainAsync(Ipipi.Send_PlainRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_MMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_MMSResponse> Send_MMSAsync(Ipipi.Send_MMSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_Port", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_PortResponse> Send_PortAsync(Ipipi.Send_PortRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_Plain_Multiple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_Plain_MultipleResponse> Send_Plain_MultipleAsync(Ipipi.Send_Plain_MultipleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_Plain_Group", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_Plain_GroupResponse> Send_Plain_GroupAsync(Ipipi.Send_Plain_GroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_Plain_ServiceGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_Plain_ServiceGroupResponse> Send_Plain_ServiceGroupAsync(Ipipi.Send_Plain_ServiceGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_Plain_Dedicated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_Plain_DedicatedResponse> Send_Plain_DedicatedAsync(Ipipi.Send_Plain_DedicatedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_Port_Dedicated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_Port_DedicatedResponse> Send_Port_DedicatedAsync(Ipipi.Send_Port_DedicatedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_Plain_Deferred", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_Plain_DeferredResponse> Send_Plain_DeferredAsync(Ipipi.Send_Plain_DeferredRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_Flash", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_FlashResponse> Send_FlashAsync(Ipipi.Send_FlashRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Send_WAPPush", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Send_WAPPushResponse> Send_WAPPushAsync(Ipipi.Send_WAPPushRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/AddContact", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.AddContactResponse> AddContactAsync(Ipipi.AddContactRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/HLR_Lookup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.HLR_LookupResponse> HLR_LookupAsync(Ipipi.HLR_LookupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Number_Validator_Quick", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Number_Validator_QuickResponse> Number_Validator_QuickAsync(Ipipi.Number_Validator_QuickRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://upsidewireless.com/webservice/sms/Number_Lookup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ipipi.Number_LookupResponse> Number_LookupAsync(Ipipi.Number_LookupRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://upsidewireless.com/webservice/sms")]
    public enum SmsEncoding
    {
        
        /// <remarks/>
        Seven,
        
        /// <remarks/>
        Eight,
        
        /// <remarks/>
        Sixteen,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://upsidewireless.com/webservice/sms")]
    public partial class SMSSendResult
    {
        
        private bool isOkField;
        
        private string trackingIdField;
        
        private string numberField;
        
        private string convertedNumberField;
        
        private bool deferUntilOccursInThePastField;
        
        private bool messageIsEmptyField;
        
        private bool tooManyMessagesField;
        
        private bool invalidCountryCodeField;
        
        private bool isBlockedField;
        
        private string blockedReasonField;
        
        private bool balanceIsZeroField;
        
        private bool invalidCarrierCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool isOk
        {
            get
            {
                return this.isOkField;
            }
            set
            {
                this.isOkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string trackingId
        {
            get
            {
                return this.trackingIdField;
            }
            set
            {
                this.trackingIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string convertedNumber
        {
            get
            {
                return this.convertedNumberField;
            }
            set
            {
                this.convertedNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool deferUntilOccursInThePast
        {
            get
            {
                return this.deferUntilOccursInThePastField;
            }
            set
            {
                this.deferUntilOccursInThePastField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool messageIsEmpty
        {
            get
            {
                return this.messageIsEmptyField;
            }
            set
            {
                this.messageIsEmptyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool tooManyMessages
        {
            get
            {
                return this.tooManyMessagesField;
            }
            set
            {
                this.tooManyMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool invalidCountryCode
        {
            get
            {
                return this.invalidCountryCodeField;
            }
            set
            {
                this.invalidCountryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool isBlocked
        {
            get
            {
                return this.isBlockedField;
            }
            set
            {
                this.isBlockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string BlockedReason
        {
            get
            {
                return this.blockedReasonField;
            }
            set
            {
                this.blockedReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool balanceIsZero
        {
            get
            {
                return this.balanceIsZeroField;
            }
            set
            {
                this.balanceIsZeroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool invalidCarrierCode
        {
            get
            {
                return this.invalidCarrierCodeField;
            }
            set
            {
                this.invalidCarrierCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://upsidewireless.com/webservice/sms")]
    public partial class NumberLookupResult
    {
        
        private bool isOkField;
        
        private string numberField;
        
        private string messageField;
        
        private string countryField;
        
        private string networkField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool isOk
        {
            get
            {
                return this.isOkField;
            }
            set
            {
                this.isOkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string network
        {
            get
            {
                return this.networkField;
            }
            set
            {
                this.networkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://upsidewireless.com/webservice/sms")]
    public partial class NumberValidatorQuickResult
    {
        
        private bool isOkField;
        
        private string numberField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool isOk
        {
            get
            {
                return this.isOkField;
            }
            set
            {
                this.isOkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://upsidewireless.com/webservice/sms")]
    public partial class HLRLookupResultObject
    {
        
        private string statusField;
        
        private string numberField;
        
        private string iMSIField;
        
        private string mCCField;
        
        private string mNCField;
        
        private string operatorNameField;
        
        private string operatorCountryField;
        
        private string mSCField;
        
        private string mscOperatorField;
        
        private string mscMCCField;
        
        private string mscMNCField;
        
        private string mscCountryField;
        
        private string mscLocationField;
        
        private string messageField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string IMSI
        {
            get
            {
                return this.iMSIField;
            }
            set
            {
                this.iMSIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MCC
        {
            get
            {
                return this.mCCField;
            }
            set
            {
                this.mCCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string MNC
        {
            get
            {
                return this.mNCField;
            }
            set
            {
                this.mNCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string operatorName
        {
            get
            {
                return this.operatorNameField;
            }
            set
            {
                this.operatorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string operatorCountry
        {
            get
            {
                return this.operatorCountryField;
            }
            set
            {
                this.operatorCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string MSC
        {
            get
            {
                return this.mSCField;
            }
            set
            {
                this.mSCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string mscOperator
        {
            get
            {
                return this.mscOperatorField;
            }
            set
            {
                this.mscOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string mscMCC
        {
            get
            {
                return this.mscMCCField;
            }
            set
            {
                this.mscMCCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string mscMNC
        {
            get
            {
                return this.mscMNCField;
            }
            set
            {
                this.mscMNCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string mscCountry
        {
            get
            {
                return this.mscCountryField;
            }
            set
            {
                this.mscCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string mscLocation
        {
            get
            {
                return this.mscLocationField;
            }
            set
            {
                this.mscLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://upsidewireless.com/webservice/sms")]
    public partial class HLRLookupResult
    {
        
        private bool isOkField;
        
        private string numberField;
        
        private string messageField;
        
        private HLRLookupResultObject resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool isOk
        {
            get
            {
                return this.isOkField;
            }
            set
            {
                this.isOkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public HLRLookupResultObject result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://upsidewireless.com/webservice/sms")]
    public partial class SMSContactResult
    {
        
        private bool isOkField;
        
        private string numberField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool isOk
        {
            get
            {
                return this.isOkField;
            }
            set
            {
                this.isOkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://upsidewireless.com/webservice/sms")]
    public partial class SMSSendServiceGroupResult
    {
        
        private bool isOkField;
        
        private string errorMessagesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool isOk
        {
            get
            {
                return this.isOkField;
            }
            set
            {
                this.isOkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string errorMessages
        {
            get
            {
                return this.errorMessagesField;
            }
            set
            {
                this.errorMessagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://upsidewireless.com/webservice/sms")]
    public partial class SMSSendGroupResult
    {
        
        private bool isOkField;
        
        private string errorMessagesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool isOk
        {
            get
            {
                return this.isOkField;
            }
            set
            {
                this.isOkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string errorMessages
        {
            get
            {
                return this.errorMessagesField;
            }
            set
            {
                this.errorMessagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://upsidewireless.com/webservice/sms")]
    public partial class SMSSendMultipleResult
    {
        
        private bool isOkField;
        
        private int successCountField;
        
        private int failedCountField;
        
        private string errorMessagesField;
        
        private string errorNumbersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool isOk
        {
            get
            {
                return this.isOkField;
            }
            set
            {
                this.isOkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int successCount
        {
            get
            {
                return this.successCountField;
            }
            set
            {
                this.successCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int failedCount
        {
            get
            {
                return this.failedCountField;
            }
            set
            {
                this.failedCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string errorMessages
        {
            get
            {
                return this.errorMessagesField;
            }
            set
            {
                this.errorMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string errorNumbers
        {
            get
            {
                return this.errorNumbersField;
            }
            set
            {
                this.errorNumbersField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Test", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_TestRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string recipient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public Ipipi.SmsEncoding encoding;
        
        public Send_TestRequest()
        {
        }
        
        public Send_TestRequest(string token, string signature, string recipient, string message, Ipipi.SmsEncoding encoding)
        {
            this.token = token;
            this.signature = signature;
            this.recipient = recipient;
            this.message = message;
            this.encoding = encoding;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_TestResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_TestResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendResult Send_TestResult;
        
        public Send_TestResponse()
        {
        }
        
        public Send_TestResponse(Ipipi.SMSSendResult Send_TestResult)
        {
            this.Send_TestResult = Send_TestResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_PlainRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string recipient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public Ipipi.SmsEncoding encoding;
        
        public Send_PlainRequest()
        {
        }
        
        public Send_PlainRequest(string token, string signature, string recipient, string message, Ipipi.SmsEncoding encoding)
        {
            this.token = token;
            this.signature = signature;
            this.recipient = recipient;
            this.message = message;
            this.encoding = encoding;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_PlainResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_PlainResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendResult Send_PlainResult;
        
        public Send_PlainResponse()
        {
        }
        
        public Send_PlainResponse(Ipipi.SMSSendResult Send_PlainResult)
        {
            this.Send_PlainResult = Send_PlainResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_MMS", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_MMSRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string recipient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public string mediaUrl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=5)]
        public Ipipi.SmsEncoding encoding;
        
        public Send_MMSRequest()
        {
        }
        
        public Send_MMSRequest(string token, string signature, string recipient, string message, string mediaUrl, Ipipi.SmsEncoding encoding)
        {
            this.token = token;
            this.signature = signature;
            this.recipient = recipient;
            this.message = message;
            this.mediaUrl = mediaUrl;
            this.encoding = encoding;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_MMSResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_MMSResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendResult Send_MMSResult;
        
        public Send_MMSResponse()
        {
        }
        
        public Send_MMSResponse(Ipipi.SMSSendResult Send_MMSResult)
        {
            this.Send_MMSResult = Send_MMSResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Port", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_PortRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string recipient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public int port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public string encodedMessage;
        
        public Send_PortRequest()
        {
        }
        
        public Send_PortRequest(string token, string signature, string recipient, int port, string encodedMessage)
        {
            this.token = token;
            this.signature = signature;
            this.recipient = recipient;
            this.port = port;
            this.encodedMessage = encodedMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_PortResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_PortResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendResult Send_PortResult;
        
        public Send_PortResponse()
        {
        }
        
        public Send_PortResponse(Ipipi.SMSSendResult Send_PortResult)
        {
            this.Send_PortResult = Send_PortResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain_Multiple", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Plain_MultipleRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string recipients;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public Ipipi.SmsEncoding encoding;
        
        public Send_Plain_MultipleRequest()
        {
        }
        
        public Send_Plain_MultipleRequest(string token, string signature, string recipients, string message, Ipipi.SmsEncoding encoding)
        {
            this.token = token;
            this.signature = signature;
            this.recipients = recipients;
            this.message = message;
            this.encoding = encoding;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain_MultipleResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Plain_MultipleResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendMultipleResult Send_Plain_MultipleResult;
        
        public Send_Plain_MultipleResponse()
        {
        }
        
        public Send_Plain_MultipleResponse(Ipipi.SMSSendMultipleResult Send_Plain_MultipleResult)
        {
            this.Send_Plain_MultipleResult = Send_Plain_MultipleResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain_Group", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Plain_GroupRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string groupName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public Ipipi.SmsEncoding encoding;
        
        public Send_Plain_GroupRequest()
        {
        }
        
        public Send_Plain_GroupRequest(string token, string signature, string groupName, string message, Ipipi.SmsEncoding encoding)
        {
            this.token = token;
            this.signature = signature;
            this.groupName = groupName;
            this.message = message;
            this.encoding = encoding;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain_GroupResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Plain_GroupResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendGroupResult Send_Plain_GroupResult;
        
        public Send_Plain_GroupResponse()
        {
        }
        
        public Send_Plain_GroupResponse(Ipipi.SMSSendGroupResult Send_Plain_GroupResult)
        {
            this.Send_Plain_GroupResult = Send_Plain_GroupResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain_ServiceGroup", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Plain_ServiceGroupRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string serviceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string groupName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=5)]
        public Ipipi.SmsEncoding encoding;
        
        public Send_Plain_ServiceGroupRequest()
        {
        }
        
        public Send_Plain_ServiceGroupRequest(string token, string signature, string serviceName, string groupName, string message, Ipipi.SmsEncoding encoding)
        {
            this.token = token;
            this.signature = signature;
            this.serviceName = serviceName;
            this.groupName = groupName;
            this.message = message;
            this.encoding = encoding;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain_ServiceGroupResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Plain_ServiceGroupResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendServiceGroupResult Send_Plain_ServiceGroupResult;
        
        public Send_Plain_ServiceGroupResponse()
        {
        }
        
        public Send_Plain_ServiceGroupResponse(Ipipi.SMSSendServiceGroupResult Send_Plain_ServiceGroupResult)
        {
            this.Send_Plain_ServiceGroupResult = Send_Plain_ServiceGroupResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain_Dedicated", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Plain_DedicatedRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string recipient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public Ipipi.SmsEncoding encoding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=5)]
        public string carrierCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=6)]
        public string dedicatedNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=7)]
        public double tariff;
        
        public Send_Plain_DedicatedRequest()
        {
        }
        
        public Send_Plain_DedicatedRequest(string token, string signature, string recipient, string message, Ipipi.SmsEncoding encoding, string carrierCode, string dedicatedNumber, double tariff)
        {
            this.token = token;
            this.signature = signature;
            this.recipient = recipient;
            this.message = message;
            this.encoding = encoding;
            this.carrierCode = carrierCode;
            this.dedicatedNumber = dedicatedNumber;
            this.tariff = tariff;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain_DedicatedResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Plain_DedicatedResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendResult Send_Plain_DedicatedResult;
        
        public Send_Plain_DedicatedResponse()
        {
        }
        
        public Send_Plain_DedicatedResponse(Ipipi.SMSSendResult Send_Plain_DedicatedResult)
        {
            this.Send_Plain_DedicatedResult = Send_Plain_DedicatedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Port_Dedicated", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Port_DedicatedRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string recipient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public int port;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public string encodedMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=5)]
        public string carrierCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=6)]
        public string dedicatedNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=7)]
        public double tariff;
        
        public Send_Port_DedicatedRequest()
        {
        }
        
        public Send_Port_DedicatedRequest(string token, string signature, string recipient, int port, string encodedMessage, string carrierCode, string dedicatedNumber, double tariff)
        {
            this.token = token;
            this.signature = signature;
            this.recipient = recipient;
            this.port = port;
            this.encodedMessage = encodedMessage;
            this.carrierCode = carrierCode;
            this.dedicatedNumber = dedicatedNumber;
            this.tariff = tariff;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Port_DedicatedResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Port_DedicatedResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendResult Send_Port_DedicatedResult;
        
        public Send_Port_DedicatedResponse()
        {
        }
        
        public Send_Port_DedicatedResponse(Ipipi.SMSSendResult Send_Port_DedicatedResult)
        {
            this.Send_Port_DedicatedResult = Send_Port_DedicatedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain_Deferred", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Plain_DeferredRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string recipient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public Ipipi.SmsEncoding encoding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=5)]
        public int DelayHours;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=6)]
        public int DelayMinutes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=7)]
        public string label;
        
        public Send_Plain_DeferredRequest()
        {
        }
        
        public Send_Plain_DeferredRequest(string token, string signature, string recipient, string message, Ipipi.SmsEncoding encoding, int DelayHours, int DelayMinutes, string label)
        {
            this.token = token;
            this.signature = signature;
            this.recipient = recipient;
            this.message = message;
            this.encoding = encoding;
            this.DelayHours = DelayHours;
            this.DelayMinutes = DelayMinutes;
            this.label = label;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Plain_DeferredResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_Plain_DeferredResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendResult Send_Plain_DeferredResult;
        
        public Send_Plain_DeferredResponse()
        {
        }
        
        public Send_Plain_DeferredResponse(Ipipi.SMSSendResult Send_Plain_DeferredResult)
        {
            this.Send_Plain_DeferredResult = Send_Plain_DeferredResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Flash", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_FlashRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string recipient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string message;
        
        public Send_FlashRequest()
        {
        }
        
        public Send_FlashRequest(string token, string signature, string recipient, string message)
        {
            this.token = token;
            this.signature = signature;
            this.recipient = recipient;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_FlashResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_FlashResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendResult Send_FlashResult;
        
        public Send_FlashResponse()
        {
        }
        
        public Send_FlashResponse(Ipipi.SMSSendResult Send_FlashResult)
        {
            this.Send_FlashResult = Send_FlashResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_WAPPush", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_WAPPushRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string recipient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string title;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public string url;
        
        public Send_WAPPushRequest()
        {
        }
        
        public Send_WAPPushRequest(string token, string signature, string recipient, string title, string url)
        {
            this.token = token;
            this.signature = signature;
            this.recipient = recipient;
            this.title = title;
            this.url = url;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_WAPPushResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Send_WAPPushResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSSendResult Send_WAPPushResult;
        
        public Send_WAPPushResponse()
        {
        }
        
        public Send_WAPPushResponse(Ipipi.SMSSendResult Send_WAPPushResult)
        {
            this.Send_WAPPushResult = Send_WAPPushResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddContact", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class AddContactRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string mobile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=3)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=4)]
        public string email;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=5)]
        public string firstname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=6)]
        public string lastname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=7)]
        public string address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=8)]
        public string city;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=9)]
        public string zipcode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=10)]
        public string landline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=11)]
        public string title;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=12)]
        public string role;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=13)]
        public string organization;
        
        public AddContactRequest()
        {
        }
        
        public AddContactRequest(string token, string signature, string mobile, string type, string email, string firstname, string lastname, string address, string city, string zipcode, string landline, string title, string role, string organization)
        {
            this.token = token;
            this.signature = signature;
            this.mobile = mobile;
            this.type = type;
            this.email = email;
            this.firstname = firstname;
            this.lastname = lastname;
            this.address = address;
            this.city = city;
            this.zipcode = zipcode;
            this.landline = landline;
            this.title = title;
            this.role = role;
            this.organization = organization;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddContactResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class AddContactResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.SMSContactResult AddContactResult;
        
        public AddContactResponse()
        {
        }
        
        public AddContactResponse(Ipipi.SMSContactResult AddContactResult)
        {
            this.AddContactResult = AddContactResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HLR_Lookup", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class HLR_LookupRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string number;
        
        public HLR_LookupRequest()
        {
        }
        
        public HLR_LookupRequest(string token, string signature, string number)
        {
            this.token = token;
            this.signature = signature;
            this.number = number;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HLR_LookupResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class HLR_LookupResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.HLRLookupResult HLR_LookupResult;
        
        public HLR_LookupResponse()
        {
        }
        
        public HLR_LookupResponse(Ipipi.HLRLookupResult HLR_LookupResult)
        {
            this.HLR_LookupResult = HLR_LookupResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Number_Validator_Quick", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Number_Validator_QuickRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string number;
        
        public Number_Validator_QuickRequest()
        {
        }
        
        public Number_Validator_QuickRequest(string token, string signature, string number)
        {
            this.token = token;
            this.signature = signature;
            this.number = number;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Number_Validator_QuickResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Number_Validator_QuickResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.NumberValidatorQuickResult Number_Validator_QuickResult;
        
        public Number_Validator_QuickResponse()
        {
        }
        
        public Number_Validator_QuickResponse(Ipipi.NumberValidatorQuickResult Number_Validator_QuickResult)
        {
            this.Number_Validator_QuickResult = Number_Validator_QuickResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Number_Lookup", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Number_LookupRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public string token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=1)]
        public string signature;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=2)]
        public string number;
        
        public Number_LookupRequest()
        {
        }
        
        public Number_LookupRequest(string token, string signature, string number)
        {
            this.token = token;
            this.signature = signature;
            this.number = number;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Number_LookupResponse", WrapperNamespace="http://upsidewireless.com/webservice/sms", IsWrapped=true)]
    public partial class Number_LookupResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://upsidewireless.com/webservice/sms", Order=0)]
        public Ipipi.NumberLookupResult Number_LookupResult;
        
        public Number_LookupResponse()
        {
        }
        
        public Number_LookupResponse(Ipipi.NumberLookupResult Number_LookupResult)
        {
            this.Number_LookupResult = Number_LookupResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface SMSSoapChannel : Ipipi.SMSSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class SMSSoapClient : System.ServiceModel.ClientBase<Ipipi.SMSSoap>, Ipipi.SMSSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SMSSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(SMSSoapClient.GetBindingForEndpoint(endpointConfiguration), SMSSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SMSSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SMSSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SMSSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SMSSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SMSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_TestResponse> Send_TestAsync(Ipipi.Send_TestRequest request)
        {
            return base.Channel.Send_TestAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_PlainResponse> Send_PlainAsync(Ipipi.Send_PlainRequest request)
        {
            return base.Channel.Send_PlainAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_MMSResponse> Send_MMSAsync(Ipipi.Send_MMSRequest request)
        {
            return base.Channel.Send_MMSAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_PortResponse> Send_PortAsync(Ipipi.Send_PortRequest request)
        {
            return base.Channel.Send_PortAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_Plain_MultipleResponse> Send_Plain_MultipleAsync(Ipipi.Send_Plain_MultipleRequest request)
        {
            return base.Channel.Send_Plain_MultipleAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_Plain_GroupResponse> Send_Plain_GroupAsync(Ipipi.Send_Plain_GroupRequest request)
        {
            return base.Channel.Send_Plain_GroupAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_Plain_ServiceGroupResponse> Send_Plain_ServiceGroupAsync(Ipipi.Send_Plain_ServiceGroupRequest request)
        {
            return base.Channel.Send_Plain_ServiceGroupAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_Plain_DedicatedResponse> Send_Plain_DedicatedAsync(Ipipi.Send_Plain_DedicatedRequest request)
        {
            return base.Channel.Send_Plain_DedicatedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_Port_DedicatedResponse> Send_Port_DedicatedAsync(Ipipi.Send_Port_DedicatedRequest request)
        {
            return base.Channel.Send_Port_DedicatedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_Plain_DeferredResponse> Send_Plain_DeferredAsync(Ipipi.Send_Plain_DeferredRequest request)
        {
            return base.Channel.Send_Plain_DeferredAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_FlashResponse> Send_FlashAsync(Ipipi.Send_FlashRequest request)
        {
            return base.Channel.Send_FlashAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Send_WAPPushResponse> Send_WAPPushAsync(Ipipi.Send_WAPPushRequest request)
        {
            return base.Channel.Send_WAPPushAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.AddContactResponse> AddContactAsync(Ipipi.AddContactRequest request)
        {
            return base.Channel.AddContactAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.HLR_LookupResponse> HLR_LookupAsync(Ipipi.HLR_LookupRequest request)
        {
            return base.Channel.HLR_LookupAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Number_Validator_QuickResponse> Number_Validator_QuickAsync(Ipipi.Number_Validator_QuickRequest request)
        {
            return base.Channel.Number_Validator_QuickAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ipipi.Number_LookupResponse> Number_LookupAsync(Ipipi.Number_LookupRequest request)
        {
            return base.Channel.Number_LookupAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SMSSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.SMSSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SMSSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://api.upsidewireless.com/soap/SMS.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.SMSSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://api.upsidewireless.com/soap/SMS.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            SMSSoap,
            
            SMSSoap12,
        }
    }
}
